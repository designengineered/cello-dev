---
import { basics } from "@cv";
import Section from "@/components/Section.astro";
import "@/styles/colors.css";
import Mail from "@/icons/Mail.astro";
import Phone from "@/icons/Phone.astro";
import X from "@/icons/X.astro";
import LinkedIn from "@/icons/LinkedIn.astro";
import GitHub from "@/icons/GitHub.astro";
import WorldMap from "@/icons/WorldMap.astro";
import Sun from "@/icons/Sun.astro";
import type { SocialIcon } from "@/types";

const { name, label, image, location, profiles, phone, email } = basics;
const { city, region } = location;

const SOCIAL_ICONS: SocialIcon = {
	GitHub,
	LinkedIn,
	X,
};

const linkedInfo = profiles.find(({ network }) => network === "LinkedIn");
const linkedUrl = linkedInfo?.url;

const printInfo = [email, phone, linkedUrl].filter(Boolean).join(" â€¢ ");
---

<Section>
	<div class="container">
		<div class="info">
			<h1>{name}</h1>
			<h2>{label}</h2>
			<span>
				<WorldMap />
				{city}, {region}
				<WorldMap />
			</span>
			<footer class="print">
				{printInfo}
			</footer>
			<footer class="no-print">
				{
					email && (
						<a
							href={`mailto:${email}`}
							title={`Send an email to ${name} at ${email}`}
							target="_blank"
							rel="noopener noreferrer"
						>
							<Mail />
						</a>
					)
				}
				{
					phone && (
						<a
							href={`tel:${phone}`}
							title={`Call ${name} at ${phone}`}
							target="_blank"
							rel="noopener noreferrer"
						>
							<Phone />
						</a>
					)
				}
				{
					profiles.map(
						({
							network,
							url,
							username,
						}) => {
							const Icon =
								SOCIAL_ICONS[
									network
								];

							return (
								<a
									href={
										url
									}
									title={`Visit ${name}'s profile in ${network} at ${username}`}
									target="_blank"
									rel="noopener noreferrer"
								>
									<Icon />
								</a>
							);
						},
					)
				}
				<button onclick="toggleTheme()"><Sun /></button>
				<script is:inline>
					// Function to set the theme
					function setTheme(theme) {
						document.documentElement.setAttribute(
							"data-theme",
							theme,
						);
						localStorage.setItem(
							"theme",
							theme,
						);
					}

					// Function to toggle the theme
					function toggleTheme() {
						const currentTheme =
							localStorage.getItem(
								"theme",
							) || "dark";
						const newTheme =
							currentTheme === "dark"
								? "light"
								: "dark";
						setTheme(newTheme);
					}

					// Initialize theme on page load and after navigation
					document.addEventListener(
						"DOMContentLoaded",
						() => {
							const savedTheme =
								localStorage.getItem(
									"theme",
								) || "dark";
							setTheme(savedTheme);
						},
					);

					document.addEventListener(
						"astro:after-swap",
						() => {
							const savedTheme =
								localStorage.getItem(
									"theme",
								) || "dark";
							setTheme(savedTheme);
						},
					);
				</script>
			</footer>
		</div>
		<figure>
			<img src={image} alt={name} />
		</figure>
	</div>
</Section>

<style>
	.container {
		display: flex;
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
		gap: 1rem;
	}

	.info {
		display: flex;
		flex-direction: column;
		align-items: left;
		padding-right: 32px;
	}

	h2 {
		text-wrap: balance;
	}

	img {
		aspect-ratio: 1 / 1;
		object-fit: cover;
		width: 184px;
		border-radius: 12px;
		margin-top: 1rem;
		align-items: center;
		justify-content: center;
	}

	span,
	p {
		color: var(--color-text);
		display: flex;
		align-items: center;
		gap: 0.25rem;
		font-size: 0.9rem;
		letter-spacing: -0.05rem;
		padding-inline: 0.8rem;
	}
	button {
		background: var(--color-background);
		color: var(--color-text);
		display: inline-flex;
		align-items: center;
		justify-content: center;
		border: 1px solid var(--color-accent);
		padding: 2px;
		height: 32px;
		width: 32px;
		border-radius: 4px;
		transition: all 0.3s ease;
	}
	button:hover {
		background: var(--color-accent);
		border: 1px solid var(--color-background);
	}
	footer {
		color: var(--color-accent);
		padding-inline: 0.8rem;
		font-size: 0.75rem;
		display: flex;
		gap: 0.5rem;
		margin-top: 0.25rem;
	}

	footer a {
		color: var(--color-text);
		display: inline-flex;
		align-items: center;
		justify-content: center;
		border: 1px solid var(--color-accent);
		padding: 2px;
		height: 32px;
		width: 32px;
		border-radius: 4px;
		transition: all 0.3s ease;
	}

	footer a:hover {
		background: var(--color-accent);
		border: 1px solid var(--color-background);
	}

	@media (width <= 700px) {
		.container {
			flex-direction: column-reverse;
		}

		.info {
			justify-content: center;
			padding-right: 0;
			align-items: center;
			text-align: center;
		}

		figure {
			display: flex;
			margin: 0 auto;
			justify-content: center;
		}

		h2 {
			text-wrap: balance;
		}
	}
</style>
